{"version":3,"sources":["redux/actions/ALogin.js","components/LoginPage/LoginPage.js","components/MainPage/MainNavBar/MainNavBar.js","components/MainPage/MainMidBar/MainMidBar.js","components/MainPage/MainPage.js","components/App/App.js","redux/initState.js","redux/initRed.js","index.js","redux/configStore.js"],"names":["ATryToLogin","type","LoginPage","props","tryToLogin","params","console","log","curPage","className","placeholder","required","id","value","onClick","this","React","Component","connect","store","dispatch","MainNavBar","MainMidBar","head","text","MainPage","state","StartSliderIndex","CardArr","CurCardArr","moveSliderLeft","bind","moveSliderRight","updShowedArr","setState","length","map","el","App","retApp","x","componentDidUpdate","curChanges","initState","initRed","action","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e38547e2.chunk.js","sourcesContent":["function ATryToLogin () {\r\n    return {\r\n        type : \"LOGIN\"\r\n    }\r\n    \r\n}\r\n\r\nexport default ATryToLogin;","import React, { Component } from \"react\";\r\nimport \"./LoginPage.css\";\r\n\r\nimport { connect, dispatch } from 'react-redux';\r\nimport ATryToLogin from '../../redux/actions/ALogin';\r\n\r\nclass LoginPage extends React.Component {  \r\n    constructor ( props ) {\r\n        super ( props );\r\n    }\r\n    tryToLogin = (params) => {\r\n        console.log ( this.props.curPage);\r\n        this.props.tryToLogin();\r\n        console.log ( this.props.curPage);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"LoginPageForm\">               \r\n                <h1 className = \"LoginPageHeader\">ДУА \"Гімназія №1 г.Ашмяны\"</h1>                \r\n                <input \r\n                    className = \"LoginPageLogin\"\r\n                    type=\"text\" \r\n                    placeholder=\"Ваш логін\" \r\n                    required=\"\"/>     \r\n                <input                      \r\n                    type=\"password\" \r\n                    placeholder=\"Ваш пароль\" \r\n                    required=\"\" \r\n                    id=\"password\" />               \r\n                <input \r\n                    className = \"LoginPageBut\"\r\n                    type=\"submit\" \r\n                    value=\"Log in\"\r\n                    onClick = {this.tryToLogin}/>                       \r\n            </div>         \r\n        )\r\n    }\r\n}   \r\n\r\nlet storeToProps = ( store ) => {\r\n    return {\r\n        curPage : store.curPage\r\n    }\r\n}\r\nlet dispatchToProps = dispatch => {\r\n    return {\r\n        tryToLogin : ()=> dispatch( ATryToLogin() )\r\n   }\r\n}\r\nexport default connect(storeToProps, dispatchToProps) (LoginPage);","import React, { Component } from 'react';\r\nimport './MainNavBar.css';\r\n\r\nclass MainNavBar extends React.Component {\r\n    constructor  ( props ) {\r\n        super ( props );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"MainNavBar\">\r\n                <p className = \"MNB_userName\">User</p>\r\n                <div className = \"MNB_menu\">\r\n                    <p className = \"MNB_menu__el\">ТЕСТЫ</p>\r\n                    <p className = \"MNB_menu__el\">КНІГАРНЯ</p>\r\n                    <p className = \"MNB_menu__el\">УРОКІ</p>\r\n                    <p className = \"MNB_menu__el\">АНІМАЦІІ</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNavBar;","import React, { Component } from 'react';\r\nimport './MainMidBar.css';\r\n\r\nclass MainMidBar extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"MainMidBar\">\r\n                <p className = \"MMB_head\">{this.props.head}</p>\r\n                <p className = \"MMB_text\">{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMidBar;","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\n\r\nimport MainNavBar from './MainNavBar/MainNavBar';\r\nimport MainMidBar from './MainMidBar/MainMidBar';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props );\r\n        this.state = {\r\n            StartSliderIndex : 0,\r\n            CardArr:[\r\n                    <MainMidBar \r\n                        head = \"Test0\"\r\n                        text = \"Some test text\"/>, \r\n                    <MainMidBar \r\n                        head = \"Test1\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainMidBar \r\n                        head = \"Test2\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainMidBar \r\n                        head = \"Test3\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainMidBar \r\n                        head = \"Test4\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainMidBar \r\n                        head = \"Test5\"\r\n                        text = \"Some test text\"/>,\r\n                    <MainMidBar \r\n                        head = \"Test6\"\r\n                        text = \"Some test text\"/>,  \r\n                    <MainMidBar \r\n                        head = \"Test7\"\r\n                        text = \"Some test text\"/>                                          \r\n            ],\r\n            CurCardArr : [\r\n                                \r\n            ]           \r\n        }\r\n        this.moveSliderLeft = this.moveSliderLeft.bind(this);\r\n        this.moveSliderRight = this.moveSliderRight.bind(this);\r\n        this.updShowedArr = this.updShowedArr.bind(this);\r\n    };\r\n    moveSliderLeft() {        \r\n        if ( this.state.StartSliderIndex>0) {\r\n            this.setState((state)=>({...state, StartSliderIndex: this.state.StartSliderIndex-1}));\r\n            this.updShowedArr();                  \r\n        }       \r\n    };\r\n    moveSliderRight() {        \r\n        if ( this.state.StartSliderIndex <= this.state.CardArr.length - 7 ) {\r\n            this.setState((state)=>({...state, StartSliderIndex: this.state.StartSliderIndex+1}));\r\n            this.updShowedArr();            \r\n        }\r\n    };\r\n    updShowedArr () {\r\n        this.setState(( state ) => ({\r\n            CurCardArr: [\r\n                state.CardArr[state.StartSliderIndex],\r\n                state.CardArr[state.StartSliderIndex+1],\r\n                state.CardArr[state.StartSliderIndex+2],\r\n                state.CardArr[state.StartSliderIndex+3],\r\n                state.CardArr[state.StartSliderIndex+4],\r\n                state.CardArr[state.StartSliderIndex+5]\r\n            ]\r\n        }));\r\n    } \r\n    componentDidMount() {\r\n        this.updShowedArr();\r\n    }\r\n    render() {       \r\n        return (\r\n            <div>\r\n                <MainNavBar></MainNavBar>\r\n                <div className = \"MNB_block\">\r\n                    <input \r\n                        type = \"submit\"\r\n                        className = \"MNB_sliderToLeftBut\"\r\n                        onClick = { this.moveSliderLeft }\r\n                        value = \"<\"/>\r\n                    <input \r\n                        type = \"submit\"\r\n                        className = \"MNB_sliderToRightBut\"\r\n                        onClick = { this.moveSliderRight }\r\n                        value = \">\"/>\r\n                    {this.state.CurCardArr.map( el =>{ return el } )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux';\n\nimport LoginPage from '../LoginPage/LoginPage';\nimport MainPage from '../MainPage/MainPage';\n\nclass App extends React.Component {\n  constructor ( props ) {\n    super ( props ); \n    this.state = {\n      curPage : <LoginPage/>,\n      curChanges : 0\n    }\n  }\n  retApp = (x) => {\n    switch ( x ) {\n      case \"LOGIN\" :\n        return <LoginPage/>;\n        break;\n      case \"MAINPAGE\" :\n        return <MainPage/>;\n        break;\n      default:\n        return <LoginPage/>\n    }\n  }\n  componentDidUpdate = () => {       \n    if ( this.state.curChanges === 0) {\n      this.setState((state, props) => ({\n            curPage: this.retApp(this.props.curPage),\n            curChanges : 1\n          }));\n    }         \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.curPage}\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = ( store ) => {\n  return {\n    curPage : store.curPage\n  }\n}\n\nexport default connect(mapStateToProps) (App);\n","let initState = {\r\n    \"id\" : \"null\",\r\n    \"curPage\" : \"LOGIN\"\r\n}\r\n\r\nexport default initState;","import initState from \"./initState\";\r\n\r\nlet initRed = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\" : {\r\n      state = {...state, curPage : \"MAINPAGE\"}\r\n      return state\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default initRed;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nimport configStore from './redux/configStore';\n\nimport { Provider } from 'react-redux';\nlet store = configStore();\n\nReactDOM.render(\n  <Provider store = { store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport initRed from \"./initRed\";\r\nimport initState from \"./initState\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(initRed, initState, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}