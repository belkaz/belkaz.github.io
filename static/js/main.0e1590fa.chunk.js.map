{"version":3,"sources":["redux/actions/ALogin.js","components/LoginPage/LoginPage.js","components/MainPage/MainNavBar/MainNavBar.js","components/MainPage/MainTestCard/MainTestCard.js","redux/actions/AShowModal.js","components/MainPage/MainNewsCard/MainNewsCard.js","components/MainPage/MainPage.js","components/Modals/NewsModal/NewsModal.js","components/App/App.js","redux/initState.js","redux/initRed.js","index.js","redux/configStore.js"],"names":["ATryToLogin","type","LoginPage","props","tryToLogin","params","console","log","curPage","className","placeholder","required","id","value","onClick","this","React","Component","connect","store","dispatch","MainNavBar","MainTestCard","head","text","AShowModal","MainNewsCard","state","showModal","clickHandler","bind","prompt","setState","MainPage","isShowModal","StartTestSliderIndex","TestArr","CurTestArr","StartSliderNewsIndex","NewsArr","curNewsArr","moveTestSliderLeft","moveTestSliderRight","updTestShowedArr","updNewsArr","newsClickHandler","newsId","length","map","el","App","retApp","x","componentDidUpdate","curChanges","initState","initRed","action","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e1590fa.chunk.js","sourcesContent":["function ATryToLogin () {\r\n    return {\r\n        type : \"LOGIN\"\r\n    }\r\n    \r\n}\r\n\r\nexport default ATryToLogin;","import React, { Component } from \"react\";\r\nimport \"./LoginPage.css\";\r\n\r\nimport { connect, dispatch } from 'react-redux';\r\nimport ATryToLogin from '../../redux/actions/ALogin';\r\n\r\nclass LoginPage extends React.Component {  \r\n    constructor ( props ) {\r\n        super ( props );\r\n    }\r\n    tryToLogin = (params) => {\r\n        console.log ( this.props.curPage);\r\n        this.props.tryToLogin();\r\n        console.log ( this.props.curPage);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"LoginPageForm\">               \r\n                <h1 className = \"LoginPageHeader\">ДУА \"Гімназія №1 г.Ашмяны\"</h1>                \r\n                <input \r\n                    className = \"LoginPageLogin\"\r\n                    type=\"text\" \r\n                    placeholder=\"Ваш логін\" \r\n                    required=\"\"/>     \r\n                <input                      \r\n                    type=\"password\" \r\n                    placeholder=\"Ваш пароль\" \r\n                    required=\"\" \r\n                    id=\"password\" />               \r\n                <input \r\n                    className = \"LoginPageBut\"\r\n                    type=\"submit\" \r\n                    value=\"Log in\"\r\n                    onClick = {this.tryToLogin}/>                       \r\n            </div>         \r\n        )\r\n    }\r\n}   \r\n\r\nlet storeToProps = ( store ) => {\r\n    return {\r\n        curPage : store.curPage\r\n    }\r\n}\r\nlet dispatchToProps = dispatch => {\r\n    return {\r\n        tryToLogin : ()=> dispatch( ATryToLogin() )\r\n   }\r\n}\r\nexport default connect(storeToProps, dispatchToProps) (LoginPage);","import React, { Component } from 'react';\r\nimport './MainNavBar.css';\r\n\r\nclass MainNavBar extends React.Component {\r\n    constructor  ( props ) {\r\n        super ( props );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"MainNavBar\">\r\n                <p className = \"MNB_userName\">User</p>\r\n                <div className = \"MNB_menu\">\r\n                    <p className = \"MNB_menu__el\">ТЕСТЫ</p>\r\n                    <p className = \"MNB_menu__el\">КНІГАРНЯ</p>\r\n                    <p className = \"MNB_menu__el\">УРОКІ</p>\r\n                    <p className = \"MNB_menu__el\">АНІМАЦІІ</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNavBar;","import React, { Component } from 'react';\r\nimport './MainTestCard.css';\r\n\r\nclass MainTestCard extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"MainTestCard\">\r\n                <p className = \"MTC_head\">{this.props.head}</p>\r\n                <p className = \"MTC_text\">{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainTestCard;","function AShowModal () {\r\n    return {\r\n        type : \"SHOW_MODAL\"\r\n    }\r\n    \r\n}\r\n\r\nexport default AShowModal;","import React, { Component } from 'react';\r\nimport './MainNewsCard.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport AShowModal from '../../../redux/actions/AShowModal';\r\n\r\n\r\nclass MainNewsCard extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props );\r\n        this.state = {\r\n            showModal : false,\r\n            head : '',\r\n            text : ''\r\n        }\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n    clickHandler() {\r\n        prompt(this.state.head, this.state.text);\r\n    }\r\n    componentDidMount(){\r\n        this.setState ((state, props) => ({\r\n            ...state,\r\n            head : props.head,\r\n            text : props.text\r\n        }))\r\n    }\r\n    render() {\r\n        return(            \r\n            <div     \r\n               className = \"MainNewsCard\"\r\n               onClick = { this.clickHandler }>\r\n               <p className = \"MFC_head\">{ this.props.head}</p>\r\n               <p className = \"MFC_text\">{ this.props.text}</p>                                                     \r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nlet storeToProps = ( store ) => {\r\n    return {\r\n        curPage : store.curPage\r\n    }\r\n}\r\nlet dispatchToProps = dispatch => {\r\n    return {\r\n        showModal : ()=> dispatch( AShowModal() )\r\n   }\r\n}\r\n\r\nexport default connect(storeToProps, dispatchToProps) (MainNewsCard);","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\n\r\nimport MainNavBar from './MainNavBar/MainNavBar';\r\nimport MainTestCard from './MainTestCard/MainTestCard';\r\nimport MainNewsCard from './MainNewsCard/MainNewsCard';\r\n\r\nimport NewsModal from '../Modals/NewsModal/NewsModal';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props );\r\n        this.state = {      \r\n            isShowModal : false,      \r\n            StartTestSliderIndex : 0,\r\n            TestArr:[\r\n                    <MainTestCard \r\n                        head = \"Test0\"\r\n                        text = \"Some test text\"/>, \r\n                    <MainTestCard \r\n                        head = \"Test1\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test2\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test3\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test4\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test5\"\r\n                        text = \"Some test text\"/>,\r\n                    <MainTestCard \r\n                        head = \"Test6\"\r\n                        text = \"Some test text\"/>,  \r\n                    <MainTestCard \r\n                        head = \"Test7\"\r\n                        text = \"Some test text\"/>,\r\n                    <MainTestCard \r\n                        head = \"Test8\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test9\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test10\"\r\n                        text = \"Some test text\"/> ,\r\n                    <MainTestCard \r\n                        head = \"Test11\"\r\n                        text = \"Some test text\"/>                                       \r\n            ],\r\n            CurTestArr : [],\r\n            StartSliderNewsIndex : 0,\r\n            NewsArr : [\r\n                <MainNewsCard \r\n                    head = \"News0\"\r\n                    text = \"Some newsSome newsSome newsSome newsSome newsSome newsSome news\" />,\r\n                <MainNewsCard \r\n                    head = \"News1\"\r\n                    text = \"Some newsSome newsSome newsSome newsSome newsSome newsSome news\" />,\r\n                <MainNewsCard \r\n                    head = \"News2\"\r\n                    text = \"Some newsSome newsSome newsSome newsSome newsSome newsSome news\" />,\r\n                <MainNewsCard \r\n                    head = \"Навіна №4\"\r\n                    text = \"Some news\" />,\r\n                <MainNewsCard \r\n                    head = \"Навіна №4\"\r\n                    text = \"Some news\" />,\r\n                <MainNewsCard \r\n                    head = \"Навіна №5\"\r\n                    text = \"Some newsSome newsSome newsSome newsSome newsSome newsSome newsSome news\" />\r\n            ],\r\n            curNewsArr : []            \r\n        }\r\n        this.moveTestSliderLeft = this.moveTestSliderLeft.bind(this);\r\n        this.moveTestSliderRight = this.moveTestSliderRight.bind(this);\r\n        this.updTestShowedArr = this.updTestShowedArr.bind(this);\r\n        this.updNewsArr = this.updNewsArr.bind(this);\r\n        this.newsClickHandler = this.newsClickHandler.bind(this);\r\n    };\r\n    newsClickHandler (newsId) {\r\n        this.setState((state)=>({...state, showModal : !state.showModal}));\r\n    }\r\n    moveTestSliderLeft() {        \r\n        if ( this.state.StartTestSliderIndex>0) {\r\n            this.setState((state)=>({...state, StartTestSliderIndex: this.state.StartTestSliderIndex-1}));\r\n            this.updTestShowedArr();                  \r\n        }       \r\n    };\r\n    moveTestSliderRight() {        \r\n        if ( this.state.StartTestSliderIndex <= this.state.TestArr.length - 11 ) {\r\n            this.setState((state)=>({...state, StartTestSliderIndex: state.StartTestSliderIndex+1}));\r\n            this.updTestShowedArr();            \r\n        }\r\n    };\r\n    updTestShowedArr () {\r\n        this.setState(( state ) => ({\r\n            ...state,\r\n            CurTestArr: [\r\n                state.TestArr[state.StartTestSliderIndex],\r\n                state.TestArr[state.StartTestSliderIndex+1],\r\n                state.TestArr[state.StartTestSliderIndex+2],\r\n                state.TestArr[state.StartTestSliderIndex+3],\r\n                state.TestArr[state.StartTestSliderIndex+4],\r\n                state.TestArr[state.StartTestSliderIndex+5],\r\n                state.TestArr[state.StartTestSliderIndex+6],\r\n                state.TestArr[state.StartTestSliderIndex+7],\r\n                state.TestArr[state.StartTestSliderIndex+8],\r\n                state.TestArr[state.StartTestSliderIndex+9]                \r\n            ]\r\n        }));\r\n    };\r\n    updNewsArr () {\r\n        this.setState( (state) => ({\r\n            ...state,\r\n            curNewsArr : [\r\n                state.NewsArr[state.StartSliderNewsIndex],\r\n                state.NewsArr[state.StartSliderNewsIndex-1],\r\n                state.NewsArr[state.StartSliderNewsIndex-2],\r\n                state.NewsArr[state.StartSliderNewsIndex-3]\r\n            ]\r\n        }))\r\n    }\r\n    componentDidUpdate() {\r\n   \r\n    }\r\n    componentDidMount() {\r\n        this.setState((state)=>({...state, StartSliderNewsIndex : state.NewsArr.length}))\r\n        this.updTestShowedArr();\r\n        this.updNewsArr();\r\n    }\r\n    render() {       \r\n        return (\r\n            <div>\r\n                <MainNavBar></MainNavBar>\r\n                    <div className = \"MNB_tests\">                        \r\n                        {this.state.CurTestArr.map( el =>{ return el } )}\r\n                        <input \r\n                            type = \"submit\"\r\n                            className = \"MNB_sliderToLeftBut\"\r\n                            onClick = { this.moveTestSliderLeft }\r\n                            value = \"<\"/>\r\n                        <input \r\n                            type = \"submit\"\r\n                            className = \"MNB_sliderToRightBut\"\r\n                            onClick = { this.moveTestSliderRight }\r\n                            value = \">\"/>\r\n                    </div>\r\n                    \r\n                    <div className = \"MNB_footBlock\">\r\n                        {this.state.curNewsArr.map( el =>{ return el } )}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet storeToProps = ( store ) => {\r\n    return {\r\n        showModal : store.showModal\r\n    }\r\n}\r\nlet dispatchToProps = dispatch => {\r\n    return {\r\n        \r\n   }\r\n}\r\n\r\n\r\nexport default connect (storeToProps, dispatchToProps) (MainPage);","import React, { Component } from 'react';\r\nimport './NewsModal.css';\r\n\r\nclass NewsModal extends React.Component {\r\n    constructor ( props ) {\r\n        super ( props ) ;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"NewsModal\">\r\n                {this.props.head}\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NewsModal;","import React from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux';\n\nimport LoginPage from '../LoginPage/LoginPage';\nimport MainPage from '../MainPage/MainPage';\n\nclass App extends React.Component {\n  constructor ( props ) {\n    super ( props ); \n    this.state = {\n      curPage : <LoginPage/>,\n      curChanges : 0\n    }\n  }\n  retApp = (x) => {\n    switch ( x ) {\n      case \"LOGIN\" :\n        return <LoginPage/>;\n        break;\n      case \"MAINPAGE\" :\n        return <MainPage/>;\n        break;\n      default:\n        return <LoginPage/>\n    }\n  }\n  componentDidUpdate = () => {       \n    if ( this.state.curChanges === 0) {\n      this.setState((state, props) => ({\n            curPage: this.retApp(this.props.curPage),\n            curChanges : 1\n          }));\n    }         \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.curPage}\n      </div>\n    )\n  }\n}\n\nlet mapStateToProps = ( store ) => {\n  return {\n    curPage : store.curPage\n  }\n}\n\nexport default connect(mapStateToProps) (App);\n","let initState = {\r\n    \"id\" : \"null\",\r\n    \"curPage\" : \"LOGIN\",\r\n    \"showModal\" : \"NONE\"\r\n}\r\n\r\nexport default initState;","import initState from \"./initState\";\r\n\r\nlet initRed = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\" : {\r\n      state = {...state, curPage : \"MAINPAGE\"}\r\n      return state\r\n    }\r\n    case \"SHOW_MODAL\" : {\r\n      state = { ...state, showModal : \"NEWS\"}\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default initRed;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nimport configStore from './redux/configStore';\n\nimport { Provider } from 'react-redux';\nlet store = configStore();\n\nReactDOM.render(\n  <Provider store = { store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport initRed from \"./initRed\";\r\nimport initState from \"./initState\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(initRed, initState, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}